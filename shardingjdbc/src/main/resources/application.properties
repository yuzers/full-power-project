#spring.main.allow-bean-definition-overriding=true
#???????
spring.shardingsphere.datasource.names=ds1,ds0

#???????
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/ds0
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=770056xf

spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/ds1
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=770056xf

#??????
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds$->{id%2}
#????????
spring.shardingsphere.rules.sharding.tables.employee.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.employee.key-generate-strategy.key-generator-name=snowflake

#??????,??????id???inline???????
spring.shardingsphere.rules.sharding.tables.employee.database-strategy.standard.sharding-column=id
#?employee??database-inline????????????id???
spring.shardingsphere.rules.sharding.tables.employee.database-strategy.standard.sharding-algorithm-name=database-inline

#???????? ???????
spring.shardingsphere.sharding.default-key-generate-strategy.xxx=snowflake

#??????
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
#??????
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=666
#??????????SQL??
spring.shardingsphere.props.sql-show=true

mybatis-plus.configuration.map-underscore-to-camel-case=true
